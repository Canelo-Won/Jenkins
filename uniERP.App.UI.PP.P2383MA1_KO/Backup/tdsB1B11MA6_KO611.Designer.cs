//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:2.0.50727.5466
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace uniERP.App.UI.MDM.B1B11MA6_KO611 {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("tdsB1B11MA6_KO611")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class tdsB1B11MA6_KO611 : global::System.Data.DataSet {
        
        private OPTION_LISTDataTable tableOPTION_LIST;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tdsB1B11MA6_KO611() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected tdsB1B11MA6_KO611(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["OPTION_LIST"] != null)) {
                    base.Tables.Add(new OPTION_LISTDataTable(ds.Tables["OPTION_LIST"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public OPTION_LISTDataTable OPTION_LIST {
            get {
                return this.tableOPTION_LIST;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            tdsB1B11MA6_KO611 cln = ((tdsB1B11MA6_KO611)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["OPTION_LIST"] != null)) {
                    base.Tables.Add(new OPTION_LISTDataTable(ds.Tables["OPTION_LIST"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableOPTION_LIST = ((OPTION_LISTDataTable)(base.Tables["OPTION_LIST"]));
            if ((initTable == true)) {
                if ((this.tableOPTION_LIST != null)) {
                    this.tableOPTION_LIST.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "tdsB1B11MA6_KO611";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/tdsB1B11MA6_KO611.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableOPTION_LIST = new OPTION_LISTDataTable();
            base.Tables.Add(this.tableOPTION_LIST);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeOPTION_LIST() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            tdsB1B11MA6_KO611 ds = new tdsB1B11MA6_KO611();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void OPTION_LISTRowChangeEventHandler(object sender, OPTION_LISTRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class OPTION_LISTDataTable : global::System.Data.TypedTableBase<OPTION_LISTRow> {
            
            private global::System.Data.DataColumn columnchecked;
            
            private global::System.Data.DataColumn columnplant_cd;
            
            private global::System.Data.DataColumn columnitem_cd;
            
            private global::System.Data.DataColumn columnuser_spec_cd;
            
            private global::System.Data.DataColumn columnitem_nm;
            
            private global::System.Data.DataColumn columnspec;
            
            private global::System.Data.DataColumn columnitem_acct;
            
            private global::System.Data.DataColumn columnchild_item_cd;
            
            private global::System.Data.DataColumn columnseq;
            
            private global::System.Data.DataColumn columnchild_item_nm;
            
            private global::System.Data.DataColumn columnchild_item_spec;
            
            private global::System.Data.DataColumn columnchild_item_qty;
            
            private global::System.Data.DataColumn columncud_char;
            
            private global::System.Data.DataColumn columnloc;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OPTION_LISTDataTable() {
                this.TableName = "OPTION_LIST";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OPTION_LISTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected OPTION_LISTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn checkedColumn {
                get {
                    return this.columnchecked;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn plant_cdColumn {
                get {
                    return this.columnplant_cd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn item_cdColumn {
                get {
                    return this.columnitem_cd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn user_spec_cdColumn {
                get {
                    return this.columnuser_spec_cd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn item_nmColumn {
                get {
                    return this.columnitem_nm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn specColumn {
                get {
                    return this.columnspec;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn item_acctColumn {
                get {
                    return this.columnitem_acct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn child_item_cdColumn {
                get {
                    return this.columnchild_item_cd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn seqColumn {
                get {
                    return this.columnseq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn child_item_nmColumn {
                get {
                    return this.columnchild_item_nm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn child_item_specColumn {
                get {
                    return this.columnchild_item_spec;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn child_item_qtyColumn {
                get {
                    return this.columnchild_item_qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cud_charColumn {
                get {
                    return this.columncud_char;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn locColumn {
                get {
                    return this.columnloc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OPTION_LISTRow this[int index] {
                get {
                    return ((OPTION_LISTRow)(this.Rows[index]));
                }
            }
            
            public event OPTION_LISTRowChangeEventHandler OPTION_LISTRowChanging;
            
            public event OPTION_LISTRowChangeEventHandler OPTION_LISTRowChanged;
            
            public event OPTION_LISTRowChangeEventHandler OPTION_LISTRowDeleting;
            
            public event OPTION_LISTRowChangeEventHandler OPTION_LISTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddOPTION_LISTRow(OPTION_LISTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OPTION_LISTRow AddOPTION_LISTRow(string _checked, string plant_cd, string item_cd, string user_spec_cd, string item_nm, string spec, string item_acct, string child_item_cd, int seq, string child_item_nm, string child_item_spec, decimal child_item_qty, string cud_char, string loc) {
                OPTION_LISTRow rowOPTION_LISTRow = ((OPTION_LISTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        _checked,
                        plant_cd,
                        item_cd,
                        user_spec_cd,
                        item_nm,
                        spec,
                        item_acct,
                        child_item_cd,
                        seq,
                        child_item_nm,
                        child_item_spec,
                        child_item_qty,
                        cud_char,
                        loc};
                rowOPTION_LISTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowOPTION_LISTRow);
                return rowOPTION_LISTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                OPTION_LISTDataTable cln = ((OPTION_LISTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new OPTION_LISTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnchecked = base.Columns["checked"];
                this.columnplant_cd = base.Columns["plant_cd"];
                this.columnitem_cd = base.Columns["item_cd"];
                this.columnuser_spec_cd = base.Columns["user_spec_cd"];
                this.columnitem_nm = base.Columns["item_nm"];
                this.columnspec = base.Columns["spec"];
                this.columnitem_acct = base.Columns["item_acct"];
                this.columnchild_item_cd = base.Columns["child_item_cd"];
                this.columnseq = base.Columns["seq"];
                this.columnchild_item_nm = base.Columns["child_item_nm"];
                this.columnchild_item_spec = base.Columns["child_item_spec"];
                this.columnchild_item_qty = base.Columns["child_item_qty"];
                this.columncud_char = base.Columns["cud_char"];
                this.columnloc = base.Columns["loc"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnchecked = new global::System.Data.DataColumn("checked", typeof(string), null, global::System.Data.MappingType.Element);
                this.columnchecked.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "checkedColumn");
                this.columnchecked.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnchecked");
                this.columnchecked.ExtendedProperties.Add("Generator_UserColumnName", "checked");
                base.Columns.Add(this.columnchecked);
                this.columnplant_cd = new global::System.Data.DataColumn("plant_cd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnplant_cd);
                this.columnitem_cd = new global::System.Data.DataColumn("item_cd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnitem_cd);
                this.columnuser_spec_cd = new global::System.Data.DataColumn("user_spec_cd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser_spec_cd);
                this.columnitem_nm = new global::System.Data.DataColumn("item_nm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnitem_nm);
                this.columnspec = new global::System.Data.DataColumn("spec", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnspec);
                this.columnitem_acct = new global::System.Data.DataColumn("item_acct", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnitem_acct);
                this.columnchild_item_cd = new global::System.Data.DataColumn("child_item_cd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnchild_item_cd);
                this.columnseq = new global::System.Data.DataColumn("seq", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnseq);
                this.columnchild_item_nm = new global::System.Data.DataColumn("child_item_nm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnchild_item_nm);
                this.columnchild_item_spec = new global::System.Data.DataColumn("child_item_spec", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnchild_item_spec);
                this.columnchild_item_qty = new global::System.Data.DataColumn("child_item_qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnchild_item_qty);
                this.columncud_char = new global::System.Data.DataColumn("cud_char", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncud_char);
                this.columnloc = new global::System.Data.DataColumn("loc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnloc);
                this.columnchecked.DefaultValue = ((string)(""));
                this.columnplant_cd.DefaultValue = ((string)(""));
                this.columnitem_cd.DefaultValue = ((string)(""));
                this.columnuser_spec_cd.DefaultValue = ((string)(""));
                this.columnitem_nm.DefaultValue = ((string)(""));
                this.columnspec.DefaultValue = ((string)(""));
                this.columnitem_acct.DefaultValue = ((string)(""));
                this.columnchild_item_cd.DefaultValue = ((string)(""));
                this.columnseq.DefaultValue = ((int)(0));
                this.columnchild_item_nm.DefaultValue = ((string)(""));
                this.columnchild_item_spec.DefaultValue = ((string)(""));
                this.columnchild_item_qty.DefaultValue = ((decimal)(0m));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OPTION_LISTRow NewOPTION_LISTRow() {
                return ((OPTION_LISTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new OPTION_LISTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(OPTION_LISTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.OPTION_LISTRowChanged != null)) {
                    this.OPTION_LISTRowChanged(this, new OPTION_LISTRowChangeEvent(((OPTION_LISTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.OPTION_LISTRowChanging != null)) {
                    this.OPTION_LISTRowChanging(this, new OPTION_LISTRowChangeEvent(((OPTION_LISTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.OPTION_LISTRowDeleted != null)) {
                    this.OPTION_LISTRowDeleted(this, new OPTION_LISTRowChangeEvent(((OPTION_LISTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.OPTION_LISTRowDeleting != null)) {
                    this.OPTION_LISTRowDeleting(this, new OPTION_LISTRowChangeEvent(((OPTION_LISTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveOPTION_LISTRow(OPTION_LISTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                tdsB1B11MA6_KO611 ds = new tdsB1B11MA6_KO611();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "OPTION_LISTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class OPTION_LISTRow : global::System.Data.DataRow {
            
            private OPTION_LISTDataTable tableOPTION_LIST;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OPTION_LISTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableOPTION_LIST = ((OPTION_LISTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _checked {
                get {
                    if (this.Is_checkedNull()) {
                        return "";
                    }
                    else {
                        return ((string)(this[this.tableOPTION_LIST.checkedColumn]));
                    }
                }
                set {
                    this[this.tableOPTION_LIST.checkedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string plant_cd {
                get {
                    if (this.Isplant_cdNull()) {
                        return "";
                    }
                    else {
                        return ((string)(this[this.tableOPTION_LIST.plant_cdColumn]));
                    }
                }
                set {
                    this[this.tableOPTION_LIST.plant_cdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string item_cd {
                get {
                    if (this.Isitem_cdNull()) {
                        return "";
                    }
                    else {
                        return ((string)(this[this.tableOPTION_LIST.item_cdColumn]));
                    }
                }
                set {
                    this[this.tableOPTION_LIST.item_cdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string user_spec_cd {
                get {
                    if (this.Isuser_spec_cdNull()) {
                        return "";
                    }
                    else {
                        return ((string)(this[this.tableOPTION_LIST.user_spec_cdColumn]));
                    }
                }
                set {
                    this[this.tableOPTION_LIST.user_spec_cdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string item_nm {
                get {
                    if (this.Isitem_nmNull()) {
                        return "";
                    }
                    else {
                        return ((string)(this[this.tableOPTION_LIST.item_nmColumn]));
                    }
                }
                set {
                    this[this.tableOPTION_LIST.item_nmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string spec {
                get {
                    if (this.IsspecNull()) {
                        return "";
                    }
                    else {
                        return ((string)(this[this.tableOPTION_LIST.specColumn]));
                    }
                }
                set {
                    this[this.tableOPTION_LIST.specColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string item_acct {
                get {
                    if (this.Isitem_acctNull()) {
                        return "";
                    }
                    else {
                        return ((string)(this[this.tableOPTION_LIST.item_acctColumn]));
                    }
                }
                set {
                    this[this.tableOPTION_LIST.item_acctColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string child_item_cd {
                get {
                    if (this.Ischild_item_cdNull()) {
                        return "";
                    }
                    else {
                        return ((string)(this[this.tableOPTION_LIST.child_item_cdColumn]));
                    }
                }
                set {
                    this[this.tableOPTION_LIST.child_item_cdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int seq {
                get {
                    try {
                        return ((int)(this[this.tableOPTION_LIST.seqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'OPTION_LIST\' 테이블의 \'seq\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableOPTION_LIST.seqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string child_item_nm {
                get {
                    if (this.Ischild_item_nmNull()) {
                        return "";
                    }
                    else {
                        return ((string)(this[this.tableOPTION_LIST.child_item_nmColumn]));
                    }
                }
                set {
                    this[this.tableOPTION_LIST.child_item_nmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string child_item_spec {
                get {
                    if (this.Ischild_item_specNull()) {
                        return "";
                    }
                    else {
                        return ((string)(this[this.tableOPTION_LIST.child_item_specColumn]));
                    }
                }
                set {
                    this[this.tableOPTION_LIST.child_item_specColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal child_item_qty {
                get {
                    try {
                        return ((decimal)(this[this.tableOPTION_LIST.child_item_qtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'OPTION_LIST\' 테이블의 \'child_item_qty\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableOPTION_LIST.child_item_qtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cud_char {
                get {
                    try {
                        return ((string)(this[this.tableOPTION_LIST.cud_charColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'OPTION_LIST\' 테이블의 \'cud_char\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableOPTION_LIST.cud_charColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string loc {
                get {
                    try {
                        return ((string)(this[this.tableOPTION_LIST.locColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'OPTION_LIST\' 테이블의 \'loc\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableOPTION_LIST.locColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_checkedNull() {
                return this.IsNull(this.tableOPTION_LIST.checkedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_checkedNull() {
                this[this.tableOPTION_LIST.checkedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isplant_cdNull() {
                return this.IsNull(this.tableOPTION_LIST.plant_cdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setplant_cdNull() {
                this[this.tableOPTION_LIST.plant_cdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isitem_cdNull() {
                return this.IsNull(this.tableOPTION_LIST.item_cdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setitem_cdNull() {
                this[this.tableOPTION_LIST.item_cdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isuser_spec_cdNull() {
                return this.IsNull(this.tableOPTION_LIST.user_spec_cdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setuser_spec_cdNull() {
                this[this.tableOPTION_LIST.user_spec_cdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isitem_nmNull() {
                return this.IsNull(this.tableOPTION_LIST.item_nmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setitem_nmNull() {
                this[this.tableOPTION_LIST.item_nmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsspecNull() {
                return this.IsNull(this.tableOPTION_LIST.specColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetspecNull() {
                this[this.tableOPTION_LIST.specColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isitem_acctNull() {
                return this.IsNull(this.tableOPTION_LIST.item_acctColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setitem_acctNull() {
                this[this.tableOPTION_LIST.item_acctColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ischild_item_cdNull() {
                return this.IsNull(this.tableOPTION_LIST.child_item_cdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setchild_item_cdNull() {
                this[this.tableOPTION_LIST.child_item_cdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsseqNull() {
                return this.IsNull(this.tableOPTION_LIST.seqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetseqNull() {
                this[this.tableOPTION_LIST.seqColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ischild_item_nmNull() {
                return this.IsNull(this.tableOPTION_LIST.child_item_nmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setchild_item_nmNull() {
                this[this.tableOPTION_LIST.child_item_nmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ischild_item_specNull() {
                return this.IsNull(this.tableOPTION_LIST.child_item_specColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setchild_item_specNull() {
                this[this.tableOPTION_LIST.child_item_specColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ischild_item_qtyNull() {
                return this.IsNull(this.tableOPTION_LIST.child_item_qtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setchild_item_qtyNull() {
                this[this.tableOPTION_LIST.child_item_qtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscud_charNull() {
                return this.IsNull(this.tableOPTION_LIST.cud_charColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcud_charNull() {
                this[this.tableOPTION_LIST.cud_charColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslocNull() {
                return this.IsNull(this.tableOPTION_LIST.locColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlocNull() {
                this[this.tableOPTION_LIST.locColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class OPTION_LISTRowChangeEvent : global::System.EventArgs {
            
            private OPTION_LISTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OPTION_LISTRowChangeEvent(OPTION_LISTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OPTION_LISTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591